app.name = sqlstat
app.workers = 2
app.baseDir = D:\\cdb\\gch\\code\\sqlstat-test
app.baseDir.isProject = true
app.basedir.excludeDir= */target
app.result.dir = D:\\cdb\\gch\\code\\sqlstat-result
app.queue.depth = 100
app.source.file.extentions = .java;.c;.sh;.pl;.sql;.ctl;.qry;.xml;.jar
app.projectStat.showDetails = true
app.projectStat.output.excel = true
app.rule.sql.common[0].regex = select\\s+?\\S+?\\s+?(?:\\S+?\\s+?)*?from
app.rule.sql.common[0].suggeston = 需要修改0
app.rule.sql.common[1].regex = delete\\s+from
app.rule.sql.common[1].suggeston = 需要修改1
app.rule.sql.common[2].regex = insert\\s+into
app.rule.sql.common[2].suggeston = 需要修改2
app.rule.sql.common[3].regex = update\\s+\\S+\\s+set
app.rule.sql.common[3].suggeston = 需要修改3
app.rule.sql.common[4].regex = sqlldr\\s+
app.rule.sql.common[4].suggeston = 需要修改4
app.rule.sql.common[5].regex = sqluldr\\s+
app.rule.sql.common[5].suggeston = 需要修改5
app.rule.sql.common[6].regex = sqlplus\\s+
app.rule.sql.common[6].suggeston = 需要修改6
app.rule.sql.common[7].regex = create\\s+table
app.rule.sql.common[7].suggeston = 需要修改7
app.rule.sql.common[8].regex = alter\\s+table
app.rule.sql.common[8].suggeston = 需要修改8
app.rule.sql.common[9].regex = dbms_output
app.rule.sql.common[9].suggeston = 需要修改9
app.rule.sql.common[10].regex = dbms_metadata
app.rule.sql.common[10].suggeston = 需要修改10
app.rule.ctl[0].regex = LOAD\\s+DATA\\s*.*\\s*INFILE\\s+
app.rule.ctl[0].suggeston = 需要修改0

#app.rule.sql.target[0].regex = select
#app.rule.sql.target[0].suggestion = select sql
#app.rule.sql.target[1].regex = update
#app.rule.sql.target[1].suggestion = update sql
#app.rule.sql.target[2].regex = insert
#app.rule.sql.target[2].suggestion = insert sql
#app.rule.sql.target[3].regex = delete
#app.rule.sql.target[3].suggestion = delete sql



app.rule.sql.target[0].regex = sysdate
app.rule.sql.target[0].suggestion = no 'sysdate' in mysql: select sysdate() from dual
app.rule.sql.target[1].regex = SYSTIMESTAMP
app.rule.sql.target[1].suggestion = no 'SYSTIMESTAMP' in mysql: select CURRENT_TIMESTAMP from dual
app.rule.sql.target[2].regex = to_char\\s*\\(
app.rule.sql.target[2].suggestion = no 'to_char' in mysql: select date_format(sysdate(), '%Y%m%d') from dual
app.rule.sql.target[3].regex = to_date\\s*\\(
app.rule.sql.target[3].suggestion = no 'to_date' in mysql: select str_to_date('20200805', '%Y%m%d') tdate from dual
app.rule.sql.target[4].regex = decode\\s*\\(
app.rule.sql.target[4].suggestion = no 'decode' in mysql: select case 2 when 1 then 100 else 200 end from dual
app.rule.sql.target[5].regex = nvl\\s*\\(
app.rule.sql.target[5].suggestion = no 'nvl' in mysql: select ifnull(null,100) from dual
app.rule.sql.target[6].regex = nvl2\\s*\\(
app.rule.sql.target[6].suggestion = no 'nvl2' in mysql: select case null when null then 1 else 2 end from dual
app.rule.sql.target[7].regex = rownum
app.rule.sql.target[7].suggestion = no 'rownum' in mysql;
app.rule.sql.target[8].regex = trunc\\s*\\(
app.rule.sql.target[8].suggestion = no 'trunc' in mysql: select date(sysdate()) from dual OR select truncate(1.23, 0) from dual
app.rule.sql.target[9].regex = CHR\\s*\\(
app.rule.sql.target[9].suggestion = no 'CHR' in mysql: select CHAR(65 USING ASCII) chr from dual;
app.rule.sql.target[10].regex = EXTRACT\\s*\\(
app.rule.sql.target[10].suggestion = no 'EXTRACT' in mysql: select YEAR(sysdate()) from dual;
app.rule.sql.target[11].regex = \\(\\+\\)
app.rule.sql.target[11].suggestion = no '(+)' in mysql: select a.*, b.* from test a left join test b on a.id=b.id;
app.rule.sql.target[12].regex = with\\s+?\\S+?\\s+?as
app.rule.sql.target[12].suggestion = no '(+)' in mysql: select * from (select * from test) tmp;
app.rule.sql.target[13].regex = row_number\\s*?\\(.*?\\)\\s+?over
app.rule.sql.target[13].suggestion = No Suggestion!!
app.rule.sql.target[14].regex = max\\s*?\\(.*?\\)\\s+?over
app.rule.sql.target[14].suggestion = No Suggestion!!
app.rule.sql.target[15].regex = sum\\s*?\\(.*?\\)\\s+?over
app.rule.sql.target[15].suggestion = No Suggestion!!
app.rule.sql.target[16].regex = listagg\\s*?\\(.*?\\)\\s+?WITHIN\\s+?GROUP
app.rule.sql.target[16].suggestion = SELECT  id, group_concat( name ORDER BY name separator ',' ) names FROM test GROUP BY id;
app.rule.sql.target[17].regex = to_timestamp\\s*\\(
app.rule.sql.target[17].suggestion = no 'to_timestamp' in mysql: select timestamp('00:00:0.000000000', 'yyyy-mm-dd hh24:mi:ss.ff9') from dual
app.rule.sql.target[18].regex = \\+\\s*index
app.rule.sql.target[18].suggestion = no '/*+ index' in mysql: force index(table_name,index_name)
app.rule.sql.target[19].regex = regexp_replace
app.rule.sql.target[19].suggestion = no 'regexp_replace' Prior to MySQL 8.0.17. use user-defined function regex_replace
app.rule.sql.target[20].regex = procedure
app.rule.sql.target[20].suggestion = this may be 'procedure',need to create in MySQL.
app.rule.sql.target[21].regex = \\|\\|
app.rule.sql.target[21].suggestion = need to buchong
app.rule.sql.target[22].regex = ceil\\s*\\(
app.rule.sql.target[22].suggestion = need to buchong
app.rule.sql.target[23].regex = substr\\s*\\(
app.rule.sql.target[23].suggestion = need to buchong
app.rule.sql.target[24].regex = instr\\s*\\(
app.rule.sql.target[24].suggestion = need to buchong
app.rule.sql.target[25].regex = length\\s*\\(
app.rule.sql.target[25].suggestion = need to buchong
app.rule.sql.target[26].regex = to_number\\s*\\(
app.rule.sql.target[26].suggestion = need to buchong
app.rule.sql.target[27].regex = add_months\\s*\\(
app.rule.sql.target[27].suggestion = need to buchong
app.rule.sql.target[28].regex = create\\s*\\sequence
app.rule.sql.target[28].suggestion = need to buchong
app.rule.sql.target[29].regex = \\.nextval
app.rule.sql.target[29].suggestion = need to buchong
app.rule.sql.target[30].regex = sys_context
app.rule.sql.target[30].suggestion = use information_schema.TABLES to get schema info
app.rule.sql.target[31].regex = connect\\s*by\\s*prior
app.rule.sql.target[31].suggestion = need to buchong
app.rule.sql.target[32].regex = call\\s+
app.rule.sql.target[32].suggestion = need to buchong
app.rule.sql.target[33].regex = full\\s+outer\\s+join
app.rule.sql.target[33].suggestion = need buchong
app.rule.sql.target[34].regex = ([<>!]\\s+=)|<\\s+>
app.rule.sql.target[34].suggestion = delete empty space
app.rule.sql.target[35].regex = :\\s*date\\s*#
app.rule.sql.target[35].suggestion = change date to datetime
app.rule.sql.target[36].regex = jdbcType\\s*=\\s*\"DATE\"
app.rule.sql.target[36].suggestion = change date to datetime


#app.rule.sql.target[33].regex = rownum(\\s+?.*?)*\\s+rownum
#app.rule.sql.target[33].suggestion = select rownum and use it in same sql，uss select @rownum
